<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <style>
    * { margin: 0; padding: 0; box-sizing: border-box; }
    body {
      font-family: 'Inter', sans-serif;
      background: #f7fafc;
      min-height: 100vh;
    }
    .navbar {
      background: white;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
      padding: 1rem 0;
      position: sticky;
      top: 0;
      z-index: 100;
    }
    .nav-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .nav-brand {
      font-size: 24px;
      font-weight: 700;
      color: #667eea;
      text-decoration: none;
      display: flex;
      align-items: center;
      gap: 8px;
    }
    .nav-menu {
      display: flex;
      align-items: center;
      gap: 16px;
    }
    .nav-user {
      color: #4a5568;
      font-weight: 500;
    }
    .btn-ghost {
      background: none;
      border: 1px solid #e2e8f0;
      color: #4a5568;
      padding: 8px 16px;
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.2s;
      display: flex;
      align-items: center;
      gap: 4px;
    }
    .btn-ghost:hover {
      background: #f7fafc;
      border-color: #cbd5e0;
    }
    .main-content {
      max-width: 800px;
      margin: 0 auto;
      padding: 40px 20px;
    }
    .back-link {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      color: #667eea;
      text-decoration: none;
      margin-bottom: 32px;
      font-weight: 500;
      transition: color 0.2s;
    }
    .back-link:hover {
      color: #764ba2;
    }
    .room-card {
      background: white;
      border-radius: 16px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
      overflow: hidden;
      border: 1px solid #e2e8f0;
    }
    .room-header {
      position: relative;
      height: 300px;
      background: linear-gradient(135deg, #667eea, #764ba2);
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
    }
    .room-icon {
      font-size: 80px;
    }
    .room-status {
      position: absolute;
      top: 20px;
      right: 20px;
      padding: 8px 16px;
      border-radius: 20px;
      font-size: 14px;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    .status-available {
      background: #c6f6d5;
      color: #2f855a;
    }
    .status-occupied {
      background: #fed7d7;
      color: #c53030;
    }
    .room-content {
      padding: 32px;
    }
    .room-title {
      font-size: 32px;
      font-weight: 700;
      color: #2d3748;
      margin-bottom: 8px;
    }
    .room-type {
      display: inline-block;
      padding: 6px 16px;
      background: #edf2f7;
      color: #4a5568;
      border-radius: 12px;
      font-size: 14px;
      font-weight: 500;
      text-transform: uppercase;
      margin-bottom: 24px;
    }
    .room-type.premium {
      background: #ffd89b;
      color: #744210;
    }
    .room-info {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 24px;
      margin-bottom: 32px;
    }
    .info-item {
      display: flex;
      align-items: center;
      gap: 12px;
      padding: 16px;
      background: #f7fafc;
      border-radius: 8px;
    }
    .info-icon {
      width: 40px;
      height: 40px;
      background: #667eea;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 18px;
    }
    .info-content h4 {
      font-size: 16px;
      font-weight: 600;
      color: #2d3748;
      margin-bottom: 4px;
    }
    .info-content p {
      color: #718096;
      font-size: 14px;
    }
    .features-section {
      margin-bottom: 32px;
    }
    .section-title {
      font-size: 20px;
      font-weight: 600;
      color: #2d3748;
      margin-bottom: 16px;
    }
    .features-list {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 12px;
    }
    .feature-item {
      display: flex;
      align-items: center;
      gap: 12px;
      padding: 12px;
      background: #f7fafc;
      border-radius: 8px;
      border-left: 4px solid #667eea;
    }
    .timer-section {
      background: #fed7d7;
      color: #c53030;
      padding: 20px;
      border-radius: 12px;
      margin-bottom: 32px;
      display: flex;
      align-items: center;
      gap: 12px;
    }
    .timer-icon {
      font-size: 24px;
    }
    .timer-content h4 {
      font-weight: 600;
      margin-bottom: 4px;
    }
    .timer-time {
      font-size: 24px;
      font-weight: 700;
      font-family: 'Courier New', monospace;
    }
    .actions-section {
      display: flex;
      gap: 16px;
      flex-wrap: wrap;
    }
    .btn {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      padding: 14px 24px;
      border-radius: 8px;
      font-weight: 600;
      text-decoration: none;
      border: none;
      cursor: pointer;
      transition: all 0.2s;
      font-size: 16px;
    }
    .btn-primary {
      background: linear-gradient(135deg, #667eea, #764ba2);
      color: white;
      flex: 1;
    }
    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
    }
    .btn-secondary {
      background: white;
      color: #667eea;
      border: 2px solid #667eea;
    }
    .btn-secondary:hover {
      background: #667eea;
      color: white;
    }
    .btn-danger {
      background: #e53e3e;
      color: white;
    }
    .btn-danger:hover {
      background: #c53030;
      transform: translateY(-2px);
    }
    .btn:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      transform: none !important;
    }
    .alert {
      padding: 16px;
      border-radius: 8px;
      margin-bottom: 24px;
    }
    .alert-success {
      background: #c6f6d5;
      color: #2f855a;
      border: 1px solid #9ae6b4;
    }
    .alert-error {
      background: #fed7d7;
      color: #e53e3e;
      border: 1px solid #feb2b2;
    }
    @media (max-width: 768px) {
      .nav-user { display: none; }
      .main-content { padding: 24px 16px; }
      .room-title { font-size: 24px; }
      .room-info { grid-template-columns: 1fr; }
      .features-list { grid-template-columns: 1fr; }
      .actions-section { flex-direction: column; }
    }
  </style>
</head>
<body>
  <nav class="navbar">
    <div class="nav-container">
      <a href="/rooms" class="nav-brand">
        <i class="fas fa-building"></i>
        ExpertBooking
      </a>
      <div class="nav-menu">
        <span class="nav-user">Olá, <%= user.name %>!</span>
        <form method="POST" action="/auth/logout">
          <button type="submit" class="btn-ghost">
            <i class="fas fa-sign-out-alt"></i>
            Sair
          </button>
        </form>
      </div>
    </div>
  </nav>

  <main class="main-content">
    <a href="/rooms" class="back-link">
      <i class="fas fa-arrow-left"></i>
      Voltar às salas
    </a>

    <% if (locals.success) { %>
      <div class="alert alert-success">
        <i class="fas fa-check-circle"></i>
        <%= success %>
      </div>
    <% } %>

    <% if (locals.error) { %>
      <div class="alert alert-error">
        <i class="fas fa-exclamation-circle"></i>
        <%= error %>
      </div>
    <% } %>

    <div class="room-card">
      <div class="room-header">
        <i class="fas fa-<%= room.type === 'premium' ? 'crown' : 'door-open' %> room-icon"></i>
        <span class="room-status <%= room.status === 'available' ? 'status-available' : 'status-occupied' %>">
          <%= room.status === 'available' ? 'Disponível' : 'Ocupada' %>
        </span>
      </div>

      <div class="room-content">
        <h1 class="room-title"><%= room.name %></h1>
        <span class="room-type <%= room.type %>">
          <%= room.type === 'premium' ? 'Premium' : 'Básica' %>
        </span>

        <div class="room-info">
          <div class="info-item">
            <div class="info-icon">
              <i class="fas fa-users"></i>
            </div>
            <div class="info-content">
              <h4>Capacidade</h4>
              <p><%= room.capacity %> pessoas</p>
            </div>
          </div>

          <div class="info-item">
            <div class="info-icon">
              <i class="fas fa-tag"></i>
            </div>
            <div class="info-content">
              <h4>Tipo</h4>
              <p><%= room.type === 'premium' ? 'Sala Premium' : 'Sala Básica' %></p>
            </div>
          </div>

          <div class="info-item">
            <div class="info-icon">
              <i class="fas fa-<%= room.status === 'available' ? 'unlock' : 'lock' %>"></i>
            </div>
            <div class="info-content">
              <h4>Status</h4>
              <p><%= room.status === 'available' ? 'Disponível para reserva' : 'Atualmente ocupada' %></p>
            </div>
          </div>
        </div>

        <% if (room.features && room.features.length > 0) { %>
          <div class="features-section">
            <h3 class="section-title">Recursos Disponíveis</h3>
            <div class="features-list">
              <% room.features.forEach(feature => { %>
                <div class="feature-item">
                  <i class="fas fa-check"></i>
                  <span><%= feature %></span>
                </div>
              <% }) %>
            </div>
          </div>
        <% } %>

        <% if (room.status === 'occupied' && room.timeRemainingFormatted) { %>
          <div class="timer-section">
            <div class="timer-icon">
              <i class="fas fa-clock"></i>
            </div>
            <div class="timer-content">
              <h4>Tempo Restante</h4>
              <div class="timer-time" id="countdown"><%= room.timeRemainingFormatted %></div>
            </div>
          </div>
        <% } %>

        <div class="actions-section">
          <% if (room.status === 'available') { %>
            <a href="/rooms/<%= room._id %>/book" class="btn btn-primary">
              <i class="fas fa-calendar-plus"></i>
              Reservar Sala
            </a>
          <% } else { %>
            <button class="btn btn-primary" disabled>
              <i class="fas fa-lock"></i>
              Sala Ocupada
            </button>
            <% if (room.currentBooking && room.currentBooking.userId && room.currentBooking.userId.toString() === user.id) { %>
              <form method="POST" action="/rooms/<%= room._id %>/cancel" style="flex: 1;">
                <button type="submit" class="btn btn-danger" style="width: 100%;">
                  <i class="fas fa-times"></i>
                  Cancelar Reserva
                </button>
              </form>
            <% } %>
          <% } %>
        </div>
      </div>
    </div>
  </main>

  <script>
    // Atualizar status da sala em tempo real
    function updateRoomStatus() {
      const roomId = '<%= room._id %>';
      
      fetch(`/rooms/${roomId}/status`)
        .then(response => response.json())
        .then(data => {
          const statusElement = document.querySelector('.room-status');
          const timerSection = document.querySelector('.timer-section');
          const countdown = document.getElementById('countdown');
          
          if (data.status === 'available') {
            statusElement.textContent = 'Disponível';
            statusElement.className = 'room-status status-available';
            
            if (timerSection) {
              timerSection.remove();
            }
            
            // Recarregar página para mostrar botão de reserva
            setTimeout(() => location.reload(), 1000);
          } else {
            statusElement.textContent = 'Ocupada';
            statusElement.className = 'room-status status-occupied';
            
            if (data.timeRemainingFormatted && countdown) {
              countdown.textContent = data.timeRemainingFormatted;
            }
          }
        })
        .catch(console.error);
    }

    // Atualizar a cada 10 segundos
    setInterval(updateRoomStatus, 10000);
  </script>
</body>
</html>
